{"version":3,"sources":["components/SearchBar/SearchBar.js","components/PanelHeader/PanelHeader.js","components/Area/Area.js","components/AreaList/AreaList.js","components/AddSurfaceArea/AddSurfaceArea.js","components/EditSurfaceArea/EditSurfaceArea.js","components/PanelContent/PanelContent.js","components/LeftPanel/LeftPanel.js","util/MapScript.js","util/Map.js","util/AddressListAPI.js","components/App/App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","state","address","handleAddressChange","bind","handleSearch","event","this","setState","target","value","searchLocation","preventDefault","className","href","type","placeholder","onChange","onClick","React","Component","PanelHeader","undefined","location","street","city","stateAndZipCode","country","Area","handleEditSurfaceAreaClick","handleDeleteSurfaceAreaClick","selectEditSurfaceArea","area","console","log","idArea","deleteArea","name","title","data-toggle","data-target","id","surfaceArea","data-dismiss","aria-hidden","AreaList","handleAddFrontClick","handleAddBackClick","handleAddLeftClick","handleAddRightClick","selectAddFront","selectAddBack","selectAddLeft","selectAddRight","totalSurfaceArea","role","aria-label","areas","map","key","activateDrawingMode","AddSurfaceArea","label","newAreaLabel","color","handleCancelAddSurfaceAreaClick","handleSaveSurfaceAreaClick","handleLabelChange","handleColorBlueClick","handleColorGreenClick","handleColorRedClick","handleColorYellowClick","handleColorBlueGreenClick","handleColorGrayClick","handleColorBlackClick","drawNewArea","surface_area","window","polygonArea","points","pointsToString","newAreaType","poly","setMap","saveNewArea","cancelAddSurfaceArea","error","alert","drawingManager","setOptions","polygonOptions","fillColor","strokeColor","strokeWeight","autoFocus","defaultValue","required","EditSurfaceArea","handleCancelEditSurfaceAreaClick","editablePolygon","createBackUpPolygon","polygon","getPath","MyMap","setEditable","setDraggable","cancelEditSurfaceArea","calculateArea","stringifyPoints","editArea","PanelContent","module","totalFronts","totalBacks","totalLefts","totalRights","deactivateDrawingMode","selectedArea","activateEditMode","LeftPanel","MapScript","onScriptLoad","google","maps","Map","document","getElementById","options","onMapLoad","s","createElement","src","x","getElementsByTagName","parentNode","insertBefore","addEventListener","e","style","width","height","drawing","DrawingManager","drawingMode","OverlayType","POLYGON","drawingControl","drawingControlOptions","position","ControlPosition","TOP_CENTER","drawingModes","draggable","editable","fillOpacity","strokeOpacity","center","lat","lng","zoom","tilt","mapTypeId","mapTypeControlOptions","mapTypeIds","streetViewControl","rotateControl","path","Polygon","lowX","centerX","lowY","centerY","coordinates","latitudes","longitudes","i","length","push","sort","LatLng","Marker","text","getArray","setDrawingMode","latLng","panTo","setZoom","geometry","spherical","computeArea","JSON","stringify","addListener","webPage","AddressList","axios","get","then","response","data","forEach","ar","parse","toFixed","arrAddress","split","catch","saveArea","post","put","delete","App","loc","moveTo","createPolygon","createLabel","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5512fd9c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SearchBar.css';\r\n\r\n\r\n\r\nclass SearchBar extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            address:'',\r\n        };\r\n        this.handleAddressChange = this.handleAddressChange.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n    }\r\n\r\n    handleAddressChange(event){\r\n        this.setState({\r\n            address: event.target.value\r\n        });\r\n    }\r\n\r\n\r\n    handleSearch(event){\r\n        this.props.searchLocation(this.state.address);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <form>\r\n                <div className=\"container-fluid navbar-dark bg-dark search-sec\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2 \">\r\n                            <a className=\"companyName\" href=\"#\">Map Module</a>\r\n                        </div>\r\n                        <div className=\"col-lg-6 col-md-6 col-sm-12 p-0\">\r\n                            <input type=\"search\" className=\"form-control search-slt\" placeholder=\"Enter Address\" onChange={this.handleAddressChange}/>\r\n                        </div>\r\n                        <div className=\"col-lg-2 col-md-2 col-sm-12 p-0\">\r\n                            <button type=\"\" className=\"btn btn-success wrn-btn\" onClick={this.handleSearch}>Search</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './PanelHeader.css';\r\n\r\nclass PanelHeader extends React.Component{\r\n    render(){\r\n        if(this.props.location===undefined){\r\n            return(\r\n                <div className=\"text-left bg-light mb-3 PanelHeader\">\r\n                    <div className=\"card-body\">\r\n                        <h3 className=\"card-title\">Enter a valid Address</h3>\r\n                        <p className=\"card-text\">Enter a valid Address</p>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return(\r\n                <div className=\"text-left bg-light mb-3 PanelHeader\">\r\n                    <div className=\"card-body\">\r\n                        <h3 className=\"card-title\">{this.props.location.street}</h3>\r\n                        <p className=\"card-text\">{this.props.location.city}, {this.props.location.stateAndZipCode}, {this.props.location.country}</p>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default PanelHeader;","import React from 'react';\r\nimport './Area.css';\r\n\r\nclass Area extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleEditSurfaceAreaClick = this.handleEditSurfaceAreaClick.bind(this);\r\n        this.handleDeleteSurfaceAreaClick = this.handleDeleteSurfaceAreaClick.bind(this);\r\n    }\r\n\r\n    handleEditSurfaceAreaClick(event){\r\n        this.props.selectEditSurfaceArea(this.props.area);\r\n        console.log(this.props.area.idArea);\r\n    }\r\n\r\n    handleDeleteSurfaceAreaClick(event){\r\n        event.preventDefault();\r\n        console.log(this.props.area.idArea);\r\n        this.props.deleteArea(this.props.area.idArea);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"AreaContent\">\r\n                <div className=\"text-left bg-light form-inline\">\r\n                    <div className=\"AreaLabel\">\r\n                        <div>\r\n                            <h5>{this.props.area.name}</h5>  \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"AreaButtons\">\r\n                        <button className=\"btn btn-warning edit\" onClick={this.handleEditSurfaceAreaClick}><i className=\"material-icons\"  title=\"Edit\">&#xE254;</i></button>\r\n                        <button  className=\"btn btn-danger\" data-toggle=\"modal\" data-target={`#Modal${this.props.area.idArea}`}><i className=\"material-icons\"  title=\"Delete\">&#xE872;</i></button>   \r\n                    </div>\r\n                </div>\r\n                <div className=\"text-left\">\r\n                    <p id=\"area\" className=\"card-text\">Area: {this.props.area.surfaceArea} sq ft</p>\r\n                </div>\r\n                <div id={`Modal${this.props.area.idArea}`} className=\"modal fade\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content text-left\">\r\n                            <form>\r\n                                <div className=\"modal-header\">\t\t\t\t\t\t\r\n                                    <h4 className=\"modal-title\">Delete {this.props.area.name}</h4>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\t\t\t\t\t\r\n                                    <p>Are you sure you want to delete this Record?</p>\r\n                                    <p className=\"text-warning\"><small>This action cannot be undone.</small></p>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <input type=\"button\" className=\"btn btn-default btnCancelModal\" data-dismiss=\"modal\" value=\"Cancel\"/>\r\n                                    <input type=\"submit\" className=\"btn btn-danger\" onClick={this.handleDeleteSurfaceAreaClick} data-dismiss=\"modal\" value=\"Delete\"/>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Area;","import React from 'react';\r\nimport './AreaList.css';\r\nimport Area from '../Area/Area';\r\n\r\nclass AreaList extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleAddFrontClick = this.handleAddFrontClick.bind(this);\r\n        this.handleAddBackClick = this.handleAddBackClick.bind(this);\r\n        this.handleAddLeftClick = this.handleAddLeftClick.bind(this);\r\n        this.handleAddRightClick = this.handleAddRightClick.bind(this);\r\n    }\r\n\r\n    handleAddFrontClick(event){\r\n        this.props.selectAddFront();\r\n    }\r\n\r\n    handleAddBackClick(event){\r\n        this.props.selectAddBack();\r\n    }\r\n\r\n    handleAddLeftClick(event){\r\n        this.props.selectAddLeft();\r\n    }\r\n\r\n    handleAddRightClick(event){\r\n        this.props.selectAddRight();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"totalAreaDiv text-left\">\r\n                    <h5>Total Surface Area:&nbsp;</h5>\r\n                    <h5 className=\"h5Area\">{this.props.location.totalSurfaceArea} sq ft</h5>\r\n                </div>\r\n                <div className=\"btnDiv text-left\">\r\n                    <h5 className=\"h5Add\">Add New Area</h5>\r\n                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                        <button type=\"button\" onClick={this.handleAddFrontClick} className=\"btn btn-success btnNewArea\">Front</button>\r\n                        <button type=\"button\" onClick={this.handleAddBackClick} className=\"btn btn-success btnNewArea\">Back</button>\r\n                        <button type=\"button\" onClick={this.handleAddLeftClick} className=\"btn btn-success btnNewArea\">Left</button>\r\n                        <button type=\"button\" onClick={this.handleAddRightClick} className=\"btn btn-success btnNewArea\">Right</button>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        this.props.location.areas.map(area => {\r\n                            return <Area\r\n                                key={area.idArea}\r\n                                location={this.props.location}\r\n                                area={area}\r\n                                activateDrawingMode={this.props.activateDrawingMode}\r\n                                selectEditSurfaceArea={this.props.selectEditSurfaceArea}\r\n                                deleteArea={this.props.deleteArea} \r\n                            />\r\n                        })\r\n                    }\r\n                </div> \r\n            </div>\r\n        );          \r\n    }\r\n}\r\n\r\nexport default AreaList;","import React from 'react';\r\nimport './AddSurfaceArea.css';\r\n\r\nclass AddSurfaceArea extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            label: this.props.newAreaLabel,\r\n            color: 'rgb(0, 105, 217)'\r\n        }\r\n        this.handleCancelAddSurfaceAreaClick = this.handleCancelAddSurfaceAreaClick.bind(this);\r\n        this.handleSaveSurfaceAreaClick = this.handleSaveSurfaceAreaClick.bind(this);\r\n        this.handleLabelChange = this.handleLabelChange.bind(this);\r\n        this.handleColorBlueClick = this.handleColorBlueClick.bind(this);\r\n        this.handleColorGreenClick = this.handleColorGreenClick.bind(this);\r\n        this.handleColorRedClick = this.handleColorRedClick.bind(this);\r\n        this.handleColorYellowClick = this.handleColorYellowClick.bind(this);\r\n        this.handleColorBlueGreenClick = this.handleColorBlueGreenClick.bind(this);\r\n        this.handleColorGrayClick = this.handleColorGrayClick.bind(this);\r\n        this.handleColorBlackClick = this.handleColorBlackClick.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.drawNewArea();\r\n    }\r\n\r\n    handleSaveSurfaceAreaClick(event){\r\n        try {\r\n            let area = {\r\n                address: this.props.location.address,\r\n                name: this.state.label,\r\n                surface_area: window.polygonArea,\r\n                points: window.pointsToString,\r\n                color: this.state.color,\r\n                type: this.props.newAreaType\r\n            }\r\n            window.poly.setMap(null);\r\n            this.props.saveNewArea(area);\r\n            this.props.cancelAddSurfaceArea();\r\n        } catch (error) {\r\n            window.alert(\"Draw Area before Saving\");\r\n        }\r\n    }\r\n\r\n    handleCancelAddSurfaceAreaClick(event){\r\n        this.props.cancelAddSurfaceArea();\r\n        if(window.poly!==undefined){\r\n            window.poly.setMap(null);\r\n        }\r\n        window.poly = undefined;\r\n    }\r\n\r\n    handleLabelChange(event){\r\n        this.setState({\r\n            label: event.target.value\r\n        });\r\n    }\r\n\r\n    handleColorBlueClick(event){\r\n        this.setState({\r\n            color: 'rgb(0, 105, 217)'\r\n        });\r\n        window.drawingManager.setOptions({\r\n            polygonOptions: {\r\n                fillColor: 'rgb(0, 105, 217)',\r\n                strokeColor: 'rgb(0, 105, 217)',\r\n                strokeWeight: 5,\r\n            }\r\n        });\r\n        if(window.poly!==undefined){\r\n\r\n        }\r\n        window.poly.setOptions({\r\n                fillColor: 'rgb(0, 105, 217)',\r\n                strokeColor: 'rgb(0, 105, 217)',\r\n                strokeWeight: 5,\r\n        });\r\n    }\r\n\r\n    handleColorGreenClick(event){\r\n        this.setState({\r\n            color: 'rgb(33, 136, 56)'\r\n        });\r\n        window.drawingManager.setOptions({\r\n            polygonOptions: {\r\n                fillColor: 'rgb(33, 136, 56)',\r\n                strokeColor: 'rgb(33, 136, 56)',\r\n                strokeWeight: 5,\r\n            }\r\n        });\r\n        if(window.poly!==undefined){\r\n            window.poly.setOptions({\r\n                fillColor: 'rgb(33, 136, 56)',\r\n                strokeColor: 'rgb(33, 136, 56)',\r\n                strokeWeight: 5,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleColorRedClick(event){\r\n        this.setState({\r\n            color: 'rgb(220, 53, 69)'\r\n        });\r\n        window.drawingManager.setOptions({\r\n            polygonOptions: {\r\n                fillColor: 'rgb(220, 53, 69)',\r\n                strokeColor: 'rgb(220, 53, 69)',\r\n                strokeWeight: 5,\r\n            }\r\n        });\r\n        if(window.poly!==undefined){\r\n            window.poly.setOptions({\r\n                fillColor: 'rgb(220, 53, 69)',\r\n                strokeColor: 'rgb(220, 53, 69)',\r\n                strokeWeight: 5,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleColorYellowClick(event){\r\n        this.setState({\r\n            color: 'rgb(224, 168, 0)'\r\n        });\r\n        window.drawingManager.setOptions({\r\n            polygonOptions: {\r\n                fillColor: 'rgb(224, 168, 0)',\r\n                strokeColor: 'rgb(224, 168, 0)',\r\n                strokeWeight: 5,\r\n            }\r\n        });\r\n        if(window.poly!==undefined){\r\n            window.poly.setOptions({\r\n                fillColor: 'rgb(224, 168, 0)',\r\n                strokeColor: 'rgb(224, 168, 0)',\r\n                strokeWeight: 5,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleColorBlueGreenClick(event){\r\n        this.setState({\r\n            color: 'rgb(19, 132, 150)'\r\n        });\r\n        window.drawingManager.setOptions({\r\n            polygonOptions: {\r\n                fillColor: 'rgb(19, 132, 150)',\r\n                strokeColor: 'rgb(19, 132, 150)',\r\n                strokeWeight: 5,\r\n            }\r\n        });\r\n        if(window.poly!==undefined){\r\n            window.poly.setOptions({\r\n                fillColor: 'rgb(19, 132, 150)',\r\n                strokeColor: 'rgb(19, 132, 150)',\r\n                strokeWeight: 5,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleColorGrayClick(event){\r\n        this.setState({\r\n            color: 'rgb(108, 117, 125)'\r\n        });\r\n        window.drawingManager.setOptions({\r\n            polygonOptions: {\r\n                fillColor: 'rgb(108, 117, 125)',\r\n                strokeColor: 'rgb(108, 117, 125)',\r\n                strokeWeight: 5,\r\n            }\r\n        });\r\n        if(window.poly!==undefined){\r\n            window.poly.setOptions({\r\n                fillColor: 'rgb(108, 117, 125)',\r\n                strokeColor: 'rgb(108, 117, 125)',\r\n                strokeWeight: 5,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleColorBlackClick(event){\r\n        this.setState({\r\n            color: 'rgb(35, 39, 43)'\r\n        });\r\n        window.drawingManager.setOptions({\r\n            polygonOptions: {\r\n                fillColor: 'rgb(35, 39, 43)',\r\n                strokeColor: 'rgb(35, 39, 43)',\r\n                strokeWeight: 5,\r\n            }\r\n        });\r\n        if(window.poly!==undefined){\r\n            window.poly.setOptions({\r\n                fillColor: 'rgb(35, 39, 43)',\r\n                strokeColor: 'rgb(35, 39, 43)',\r\n                strokeWeight: 5,\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"mainContainer\">\r\n                <div className=\"headerDiv text-left\">\r\n                    <h5>Add {`${this.props.newAreaType}`}</h5>\r\n                </div>\r\n                <div className=\"colorDiv text-left\">\r\n                    <label>Color</label>\r\n                    <br></br>\r\n                    <button className=\"btn btn-primary btnColor\" onClick={this.handleColorBlueClick} autoFocus></button>\r\n                    <button className=\"btn btn-success btnColor\" onClick={this.handleColorGreenClick}></button>\r\n                    <button className=\"btn btn-danger btnColor\" onClick={this.handleColorRedClick}></button>\r\n                    <button className=\"btn btn-warning btnColor\" onClick={this.handleColorYellowClick}></button>\r\n                    <button className=\"btn btn-info btnColor\" onClick={this.handleColorBlueGreenClick}></button>\r\n                    <button className=\"btn btn-secondary btnColor\" onClick={this.handleColorGrayClick}></button>\r\n                    <button className=\"btn btn-dark btnColor\" onClick={this.handleColorBlackClick}></button>\r\n                </div>\r\n                <div className=\"text-left\">\r\n                    <form>\r\n                        <label>Label</label>\r\n                        <input type=\"text\" className=\"form-control\" onChange={this.handleLabelChange} defaultValue={this.props.newAreaLabel} required/>\r\n                    </form> \r\n                </div>\r\n                <div className=\"bottomDiv text-left\">\r\n                    <div className=\"\">\r\n                        <input type=\"button\" className=\"btn btn-default btnCancel\" onClick={this.handleCancelAddSurfaceAreaClick} data-dismiss=\"modal\" value=\"Cancel\"/>\r\n                        <input type=\"submit\" className=\"btn btn-success btnAdd\" onClick={this.handleSaveSurfaceAreaClick} value=\"Add\"/>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        );\r\n    }\r\n}\r\n\r\nexport default AddSurfaceArea;","import React from 'react';\r\nimport './EditSurfaceArea.css';\r\n\r\nclass EditSurfaceArea extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            label: this.props.area.name,\r\n            color: this.props.area.color\r\n        }\r\n        this.handleCancelEditSurfaceAreaClick = this.handleCancelEditSurfaceAreaClick.bind(this);\r\n        this.handleEditSurfaceAreaClick = this.handleEditSurfaceAreaClick.bind(this);\r\n        this.handleLabelChange = this.handleLabelChange.bind(this);\r\n        this.handleColorBlueClick = this.handleColorBlueClick.bind(this);\r\n        this.handleColorGreenClick = this.handleColorGreenClick.bind(this);\r\n        this.handleColorRedClick = this.handleColorRedClick.bind(this);\r\n        this.handleColorYellowClick = this.handleColorYellowClick.bind(this);\r\n        this.handleColorBlueGreenClick = this.handleColorBlueGreenClick.bind(this);\r\n        this.handleColorGrayClick = this.handleColorGrayClick.bind(this);\r\n        this.handleColorBlackClick = this.handleColorBlackClick.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({editablePolygon: this.props.createBackUpPolygon(this.props.area.polygon.getPath(), this.props.area.color)}, function(){\r\n            this.props.area.polygon.setMap(null);\r\n            this.state.editablePolygon.setMap(window.MyMap);\r\n            this.state.editablePolygon.setEditable(true);\r\n            this.state.editablePolygon.setDraggable(true);\r\n        });    \r\n    }\r\n\r\n    handleCancelEditSurfaceAreaClick(event){\r\n        this.props.cancelEditSurfaceArea();\r\n        this.state.editablePolygon.setMap(null);\r\n        this.props.area.polygon.setMap(window.MyMap);\r\n    }\r\n\r\n    handleEditSurfaceAreaClick(event){\r\n        let area = {\r\n            idArea: this.props.area.idArea,\r\n            address: this.props.location.address,\r\n            name: this.state.label,\r\n            surface_area: this.props.calculateArea(this.state.editablePolygon.getPath()),\r\n            points: this.props.stringifyPoints(this.state.editablePolygon.getPath()),\r\n            color: this.state.color,\r\n            type: this.props.area.type\r\n        }\r\n        this.props.cancelEditSurfaceArea();\r\n        this.props.editArea(area);\r\n        this.state.editablePolygon.setMap(null);\r\n    }\r\n\r\n    handleLabelChange(event){\r\n        this.setState({\r\n            label: event.target.value\r\n        });\r\n    }\r\n\r\n    handleColorBlueClick(event){\r\n        this.setState({\r\n            color: 'rgb(0, 105, 217)'\r\n        });\r\n        this.state.editablePolygon.setOptions({\r\n                fillColor: 'rgb(0, 105, 217)',\r\n                strokeColor: 'rgb(0, 105, 217)',\r\n                strokeWeight: 5,\r\n        });\r\n    }\r\n\r\n    handleColorGreenClick(event){\r\n        this.setState({\r\n            color: 'rgb(33, 136, 56)'\r\n        });\r\n        this.state.editablePolygon.setOptions({\r\n                fillColor: 'rgb(33, 136, 56)',\r\n                strokeColor: 'rgb(33, 136, 56)',\r\n                strokeWeight: 5,\r\n        });\r\n    }\r\n\r\n    handleColorRedClick(event){\r\n        this.setState({\r\n            color: 'rgb(220, 53, 69)'\r\n        });\r\n        this.state.editablePolygon.setOptions({\r\n                fillColor: 'rgb(220, 53, 69)',\r\n                strokeColor: 'rgb(220, 53, 69)',\r\n                strokeWeight: 5,\r\n        });\r\n    }\r\n\r\n    handleColorYellowClick(event){\r\n        this.setState({\r\n            color: 'rgb(224, 168, 0)'\r\n        });\r\n        this.state.editablePolygon.setOptions({\r\n                fillColor: 'rgb(224, 168, 0)',\r\n                strokeColor: 'rgb(224, 168, 0)',\r\n                strokeWeight: 5,\r\n        });\r\n    }\r\n\r\n    handleColorBlueGreenClick(event){\r\n        this.setState({\r\n            color: 'rgb(19, 132, 150)'\r\n        });\r\n        this.state.editablePolygon.setOptions({\r\n                fillColor: 'rgb(19, 132, 150)',\r\n                strokeColor: 'rgb(19, 132, 150)',\r\n                strokeWeight: 5,\r\n        });\r\n    }\r\n\r\n    handleColorGrayClick(event){\r\n        this.setState({\r\n            color: 'rgb(108, 117, 125)'\r\n        });\r\n        this.state.editablePolygon.setOptions({\r\n                fillColor: 'rgb(108, 117, 125)',\r\n                strokeColor: 'rgb(108, 117, 125)',\r\n                strokeWeight: 5,\r\n        });\r\n    }\r\n\r\n    handleColorBlackClick(event){\r\n        this.setState({\r\n            color: 'rgb(35, 39, 43)'\r\n        });\r\n        this.state.editablePolygon.setOptions({\r\n                fillColor: 'rgb(35, 39, 43)',\r\n                strokeColor: 'rgb(35, 39, 43)',\r\n                strokeWeight: 5,\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"mainContainer\">\r\n                <div className=\"headerDiv text-left\">\r\n                    <h5>Edit Surface Area</h5>\r\n                </div>\r\n                <div className=\"colorDiv text-left\">\r\n                    <label>Color</label>\r\n                    <br></br>\r\n                    <button className=\"btn btn-primary btnColor\" onClick={this.handleColorBlueClick}></button>\r\n                    <button className=\"btn btn-success btnColor\" onClick={this.handleColorGreenClick}></button>\r\n                    <button className=\"btn btn-danger btnColor\" onClick={this.handleColorRedClick}></button>\r\n                    <button className=\"btn btn-warning btnColor\" onClick={this.handleColorYellowClick}></button>\r\n                    <button className=\"btn btn-info btnColor\" onClick={this.handleColorBlueGreenClick}></button>\r\n                    <button className=\"btn btn-secondary btnColor\" onClick={this.handleColorGrayClick}></button>\r\n                    <button className=\"btn btn-dark btnColor\" onClick={this.handleColorBlackClick}></button>\r\n                </div>\r\n                <div className=\"text-left\">\r\n                    <form>\r\n                        <label>Label</label>\r\n                        <input type=\"text\" className=\"form-control\" onChange={this.handleLabelChange} defaultValue={this.props.area.name} required/>\r\n                    </form>\r\n                    <div className=\"bottomDiv\">\r\n                        <input type=\"button\" className=\"btn btn-default btnCancel\" onClick={this.handleCancelEditSurfaceAreaClick} data-dismiss=\"modal\" value=\"Cancel\"/>\r\n                        <input type=\"submit\" className=\"btn btn-success btnAdd\" onClick={this.handleEditSurfaceAreaClick} value=\"Edit\"/>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        );\r\n    }\r\n}\r\n\r\nexport default EditSurfaceArea;","import React from 'react';\r\nimport './PanelContent.css';\r\nimport AreaList from '../AreaList/AreaList';\r\nimport AddSurfaceArea from '../AddSurfaceArea/AddSurfaceArea';\r\nimport EditSurfaceArea from '../EditSurfaceArea/EditSurfaceArea';\r\n\r\nclass PanelContent extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            module: 'areaList'\r\n        }\r\n        this.selectAddFront = this.selectAddFront.bind(this);\r\n        this.selectAddBack = this.selectAddBack.bind(this);\r\n        this.selectAddLeft = this.selectAddLeft.bind(this);\r\n        this.selectAddRight = this.selectAddRight.bind(this);\r\n        this.cancelAddSurfaceArea = this.cancelAddSurfaceArea.bind(this);\r\n        this.selectEditSurfaceArea = this.selectEditSurfaceArea.bind(this);\r\n        this.cancelEditSurfaceArea = this.cancelEditSurfaceArea.bind(this);\r\n    }\r\n\r\n    selectAddFront(){\r\n        this.setState({\r\n            module: 'newArea',\r\n            newAreaType: 'Front',\r\n            newAreaLabel: `F${this.props.location.totalFronts+1}`\r\n        });\r\n        this.props.activateDrawingMode();\r\n    }\r\n\r\n    selectAddBack(){\r\n        this.setState({\r\n            module: 'newArea',\r\n            newAreaType: 'Back',\r\n            newAreaLabel: `B${this.props.location.totalBacks+1}`\r\n        });\r\n        this.props.activateDrawingMode();\r\n    }\r\n\r\n    selectAddLeft(){\r\n        this.setState({\r\n            module: 'newArea',\r\n            newAreaType: 'Left',\r\n            newAreaLabel: `L${this.props.location.totalLefts+1}`\r\n        });\r\n        this.props.activateDrawingMode();\r\n    }\r\n\r\n    selectAddRight(){\r\n        this.setState({\r\n            module: 'newArea',\r\n            newAreaType: 'Right',\r\n            newAreaLabel: `R${this.props.location.totalRights+1}`\r\n        });\r\n        this.props.activateDrawingMode();\r\n    }\r\n\r\n    cancelAddSurfaceArea(){\r\n        this.setState({\r\n            module: 'areaList'\r\n        });\r\n        this.props.deactivateDrawingMode();\r\n    }\r\n\r\n    selectEditSurfaceArea(selectedArea){\r\n        this.setState({\r\n            module: 'editArea',\r\n            area: selectedArea\r\n        });\r\n        this.props.activateEditMode();\r\n    }\r\n\r\n    cancelEditSurfaceArea(){\r\n        this.setState({\r\n            module: 'areaList'\r\n        });\r\n        this.props.deactivateDrawingMode();\r\n    }\r\n\r\n    render(){\r\n        if(this.props.location===undefined){\r\n            return(\r\n                <div></div>\r\n            );\r\n        } else if (this.state.module==='areaList'){\r\n            return(\r\n                <AreaList \r\n                    location={this.props.location} \r\n                    selectAddFront={this.selectAddFront}\r\n                    selectAddBack={this.selectAddBack}\r\n                    selectAddLeft={this.selectAddLeft}\r\n                    selectAddRight={this.selectAddRight}\r\n                    selectEditSurfaceArea={this.selectEditSurfaceArea} \r\n                    deleteArea={this.props.deleteArea} \r\n                />\r\n            );\r\n        } else if(this.state.module==='newArea'){\r\n            return(\r\n                <AddSurfaceArea\r\n                    location={this.props.location} \r\n                    newAreaType={this.state.newAreaType}\r\n                    newAreaLabel={this.state.newAreaLabel}\r\n                    cancelAddSurfaceArea={this.cancelAddSurfaceArea}\r\n                    drawNewArea={this.props.drawNewArea}\r\n                    saveNewArea={this.props.saveNewArea}\r\n                    searchLocation={this.props.searchLocation}\r\n                />\r\n            );\r\n        } else if(this.state.module==='editArea'){\r\n            return(\r\n                <EditSurfaceArea\r\n                    location={this.props.location}\r\n                    calculateArea={this.props.calculateArea}\r\n                    stringifyPoints={this.props.stringifyPoints}\r\n                    createBackUpPolygon={this.props.createBackUpPolygon} \r\n                    area={this.state.area}\r\n                    cancelEditSurfaceArea={this.cancelEditSurfaceArea}\r\n                    editArea={this.props.editArea}\r\n                />    \r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default PanelContent;","import React from 'react';\r\nimport './LeftPanel.css';\r\nimport PanelHeader from '../PanelHeader/PanelHeader';\r\nimport PanelContent from '../PanelContent/PanelContent';\r\n\r\nclass LeftPanel extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id=\"sidebar\" className=\"bg-light\">\r\n                <PanelHeader location={this.props.location}/>\r\n                <PanelContent \r\n                    location={this.props.location} \r\n                    calculateArea={this.props.calculateArea}\r\n                    stringifyPoints={this.props.stringifyPoints}\r\n                    createBackUpPolygon={this.props.createBackUpPolygon}\r\n                    activateDrawingMode={this.props.activateDrawingMode}\r\n                    activateEditMode={this.props.activateEditMode}\r\n                    deactivateDrawingMode={this.props.deactivateDrawingMode}\r\n                    drawNewArea={this.props.drawNewArea}\r\n                    saveNewArea={this.props.saveNewArea}\r\n                    editArea={this.props.editArea}\r\n                    deleteArea={this.props.deleteArea}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LeftPanel;","import React, { Component } from 'react';\r\n\r\nclass MapScript extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onScriptLoad = this.onScriptLoad.bind(this)\r\n  }\r\n\r\n  onScriptLoad() {\r\n    const map = new window.google.maps.Map(\r\n      document.getElementById(this.props.id),\r\n      this.props.options);\r\n      this.props.onMapLoad(map);\r\n      window.MyMap = map;\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!window.google) {\r\n      var s = document.createElement('script');\r\n      s.type = 'text/javascript';\r\n      s.src = `https://maps.google.com/maps/api/js?key=AIzaSyAYeaYBxuXTTgwJsx9sGPrmcvd-RpmAcJE&libraries=drawing,geometry`;\r\n      var x = document.getElementsByTagName('script')[0];\r\n      x.parentNode.insertBefore(s, x);\r\n      // Below is important. \r\n      //We cannot access google.maps until it's finished loading\r\n      s.addEventListener('load', e => {\r\n        this.onScriptLoad()\r\n      })\r\n    } else {\r\n      this.onScriptLoad()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: '100%', height: 'calc(100vh - 74px)' }} id={this.props.id} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapScript;\r\n","import React from 'react';\r\nimport MapScript from './MapScript';\r\n\r\nwindow.drawingManager = new window.google.maps.drawing.DrawingManager({\r\n    drawingMode: window.google.maps.drawing.OverlayType.POLYGON,\r\n    drawingControl: true,\r\n    drawingControlOptions: {\r\n        position: window.google.maps.ControlPosition.TOP_CENTER,\r\n        drawingModes: ['polygon']\r\n    },\r\n    polygonOptions: {\r\n        draggable: true,\r\n        editable: true,\r\n        fillColor: 'rgb(0, 105, 217)',\r\n        fillOpacity: 0.5,\r\n        strokeColor: 'rgb(0, 105, 217)',\r\n        strokeOpacity: 1,\r\n        strokeWeight: 5,\r\n    }\r\n});\r\n\r\nclass Map extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    static createPolygon(path, color) {\r\n        var polygon = new window.google.maps.Polygon({\r\n            fillColor: color,\r\n            fillOpacity: 0.3,\r\n            strokeWeight: 5,\r\n            strokeColor: color,\r\n            editable: false,\r\n            draggable: false,\r\n            path: path,\r\n        });\r\n        polygon.setMap(window.MyMap);\r\n        return polygon;\r\n    }\r\n\r\n    static createLabel(path, name){\r\n        var lowX;\r\n        var highX;\r\n        var centerX;\r\n        var lowY;\r\n        var highY;\r\n        var centerY;\r\n        var latitudes = [];\r\n        var longitudes = [];\r\n        var coordinates;\r\n        for(var i = 0; i < path.length; i++){\r\n            latitudes.push(path[i].lat);\r\n            longitudes.push(path[i].lng);\r\n        }\r\n        latitudes.sort();\r\n        longitudes.sort();\r\n        lowX = latitudes[0];\r\n        highX = latitudes[path.length - 1];\r\n        lowY = longitudes[0];\r\n        highY = longitudes[path.length - 1];\r\n        centerX = lowX + ((highX - lowX) / 2);\r\n        centerY = lowY + ((highY - lowY) / 2);\r\n        coordinates = new window.google.maps.LatLng(centerX, centerY);\r\n        \r\n        var marker = new window.google.maps.Marker({\r\n            position: coordinates,\r\n            map: window.MyMap,\r\n            label: {\r\n                text: name,\r\n                color: 'white'\r\n            }\r\n        });\r\n        return marker;\r\n    }\r\n\r\n    static createBackUpPolygon(path, color){\r\n        let points = path.getArray().map((coordinates => {\r\n            return{\r\n                lat:coordinates.lat(),\r\n                lng:coordinates.lng()\r\n            }\r\n        }));\r\n        var backUpPolygon = new window.google.maps.Polygon({\r\n            fillColor: color,\r\n            fillOpacity: 0.3,\r\n            strokeWeight: 5,\r\n            strokeColor: color,\r\n            editable: false,\r\n            draggable: false,\r\n            path: points,\r\n        });\r\n        return backUpPolygon;\r\n    }\r\n\r\n    static activateDrawingMode(){\r\n        window.drawingManager.setMap(window.MyMap);\r\n        window.drawingManager.setDrawingMode('polygon');\r\n    }\r\n\r\n    static activateEditMode(polygon){\r\n        window.drawingManager.setMap(window.MyMap);\r\n        window.drawingManager.setDrawingMode(null);\r\n    }\r\n\r\n    static deactivateDrawingMode(){\r\n        window.drawingManager.setMap(null);\r\n    }\r\n\r\n    static moveTo(lat, lng){\r\n        var latLng = new window.google.maps.LatLng(lat, lng)\r\n        window.MyMap.panTo(latLng);\r\n        window.MyMap.setZoom(100);\r\n    }\r\n\r\n    static calculateArea(path){\r\n        var area = window.google.maps.geometry.spherical.computeArea(path);\r\n        area = area * 10.76391;\r\n        return area;\r\n    }\r\n\r\n    static stringifyPoints(path){\r\n        let points = path.getArray().map((coordinates => {\r\n            return{\r\n                lat:coordinates.lat(),\r\n                lng:coordinates.lng()\r\n            }\r\n        }));\r\n        let pointsToString = JSON.stringify(points);\r\n        return pointsToString;\r\n    }\r\n\r\n    static drawNewArea(){\r\n        window.google.maps.event.addListener(window.drawingManager, 'polygoncomplete', function(polygon){\r\n            window.poly = polygon;\r\n            let path = polygon.getPath();\r\n            let points = path.getArray().map((coordinates => {\r\n                return{\r\n                    lat: coordinates.lat(),\r\n                    lng: coordinates.lng()\r\n                }\r\n            }));\r\n            window.pointsToString = JSON.stringify(points);\r\n            window.polygonArea = window.google.maps.geometry.spherical.computeArea(path);\r\n            console.log(window.pointsToString);\r\n            console.log(window.polygonArea);\r\n            window.drawingManager.setMap(null);\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            <MapScript\r\n                id=\"myMap\"\r\n                options={{\r\n                    center: { lat: 34.154631, lng: -118.451229, },\r\n                    zoom: 40,\r\n                    tilt: 0,\r\n                    mapTypeId: 'hybrid',\r\n                    mapTypeControlOptions:{\r\n                        mapTypeIds: ['hybrid']\r\n                    },\r\n                    streetViewControl: false,\r\n                    rotateControl: false\r\n                }}\r\n                onMapLoad={map => {\r\n\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Map ;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nvar webPage = 'webapi20191128121222.azurewebsites.net';\r\n\r\nconst AddressList = {\r\n    searchLocation(address){\r\n        return axios.get(`https://${webPage}/api/location/${address}`)\r\n        .then(response => {\r\n            var totalSurfaceArea = 0;\r\n            var totalFronts = 0;\r\n            var totalBacks = 0;\r\n            var totalLefts = 0;\r\n            var totalRights = 0;\r\n            response.data.area.forEach(ar => {\r\n                ar.points = JSON.parse(ar.points);\r\n                totalSurfaceArea += ar.surfaceArea;\r\n                if(ar.type==='Front') totalFronts++;\r\n                if(ar.type==='Back') totalBacks++;\r\n                if(ar.type==='Left') totalLefts++;\r\n                if(ar.type==='Right') totalRights++;\r\n            });\r\n            totalSurfaceArea = totalSurfaceArea.toFixed(4);\r\n            var arrAddress = response.data.address.split(',');\r\n            const dataLocation= {\r\n                address: response.data.address,\r\n                coordinates: JSON.parse(response.data.coordinates),\r\n                areas: response.data.area,\r\n                totalSurfaceArea: totalSurfaceArea,\r\n                totalFronts: totalFronts,\r\n                totalBacks: totalBacks,\r\n                totalLefts: totalLefts,\r\n                totalRights: totalRights,\r\n                street: arrAddress[0],\r\n                city: arrAddress[1],\r\n                stateAndZipCode: arrAddress[2],\r\n                country: arrAddress[3]\r\n            }\r\n            return dataLocation;\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    },\r\n\r\n    saveArea(area){\r\n        return axios.post(`https://${webPage}/api/area`, {\r\n            address: area.address,\r\n            name: area.name,\r\n            surfaceArea: area.surface_area,\r\n            points: area.points,\r\n            color: area.color,\r\n            type: area.type\r\n        }).then(response => {\r\n            console.log(response);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    },\r\n\r\n    editArea(area){\r\n        return axios.put(`https://${webPage}/api/area/${area.idArea}`, {\r\n            idArea: area.idArea,\r\n            address: area.address,\r\n            name: area.name,\r\n            surfaceArea: area.surface_area,\r\n            points: area.points,\r\n            color: area.color,\r\n            type: area.type\r\n        }).then(response => {\r\n            console.log(response.data);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    },\r\n\r\n    deleteArea(idArea){\r\n        return axios.delete(`https://${webPage}/api/area/${idArea}`).then(response => {\r\n            console.log(response.data);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default AddressList;","import React from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar.js';\nimport LeftPanel from '../LeftPanel/LeftPanel.js';\nimport LocationList from '../../util/AddressList';\nimport Map from '../../util/Map';\nimport AddressList from '../../util/AddressListAPI';\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      \n    }\n    this.searchLocation = this.searchLocation.bind(this);\n    this.saveNewArea = this.saveNewArea.bind(this);\n    this.editArea = this.editArea.bind(this);\n    this.deleteArea = this.deleteArea.bind(this);\n  }\n\n  searchLocation(address){\n    if(this.state.location!==undefined){\n      this.state.location.areas.forEach(area => {\n        area.polygon.setMap(null);\n        area.label.setMap(null);\n      });\n    }\n    AddressList.searchLocation(address).then(loc => {\n      this.setState({location: loc}, function(){\n        console.log(this.state.location);\n        if(this.state.location===undefined){\n          window.alert(\"Search for a valid address\");\n        }else{\n          Map.moveTo(this.state.location.coordinates.lat, this.state.location.coordinates.lng);\n          this.state.location.areas.forEach(area => {\n            area.polygon = Map.createPolygon(area.points, area.color);\n            area.label = Map.createLabel(area.points, area.name);\n          });\n        }\n      });\n    });\n  }\n\n  saveNewArea(area){\n    AddressList.saveArea(area).then(response => {\n      this.state.location.areas.forEach(area => {\n        area.polygon.setMap(null);\n        area.label.setMap(null);\n      });\n      AddressList.searchLocation(this.state.location.address).then(loc => {\n        this.setState({location: loc}, function(){\n          this.state.location.areas.forEach(area => {\n            area.polygon = Map.createPolygon(area.points, area.color);\n            area.label = Map.createLabel(area.points, area.name);\n          });\n        });\n      });\n    });\n  }\n\n  editArea(area){\n    AddressList.editArea(area).then(response => {\n      this.state.location.areas.forEach(area => {\n        area.polygon.setMap(null);\n        area.label.setMap(null);\n      });\n      AddressList.searchLocation(this.state.location.address).then(loc => {\n        this.setState({location: loc}, function(){\n          this.state.location.areas.forEach(area => {\n            area.polygon = Map.createPolygon(area.points, area.color);\n            area.label = Map.createLabel(area.points, area.name);\n          });\n        });\n      });\n    });\n  }\n\n  deleteArea(idArea){\n    AddressList.deleteArea(idArea).then(response => {\n      this.state.location.areas.forEach(area => {\n        area.polygon.setMap(null);\n        area.label.setMap(null);\n      });\n      AddressList.searchLocation(this.state.location.address).then(loc => {\n        this.setState({location: loc}, function(){\n          this.state.location.areas.forEach(area => {\n            area.polygon = Map.createPolygon(area.points, area.color);\n            area.label = Map.createLabel(area.points, area.name);\n          });\n        });\n      });\n    });;\n  }\n\n  createBackUpPolygon(points, color){\n    return Map.createBackUpPolygon(points, color);\n  }\n\n  drawNewArea(){\n    Map.drawNewArea();\n  }\n\n  activateDrawingMode(){\n    Map.activateDrawingMode();\n  }\n\n  activateEditMode(){\n    Map.activateEditMode();\n  }\n\n  deactivateDrawingMode(){\n    Map.deactivateDrawingMode();\n  }\n\n  calculateArea(path){\n    return Map.calculateArea(path);\n  }\n\n  stringifyPoints(path){\n    return Map.stringifyPoints(path);\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <SearchBar searchLocation={this.searchLocation}/>\n        <div className=\"wrapper\">\n          <LeftPanel \n            location={this.state.location}\n            calculateArea={this.calculateArea}\n            stringifyPoints={this.stringifyPoints}\n            createBackUpPolygon={this.createBackUpPolygon} \n            activateDrawingMode={this.activateDrawingMode}\n            activateEditMode={this.activateEditMode}\n            deactivateDrawingMode={this.deactivateDrawingMode}\n            drawNewArea={this.drawNewArea}\n            saveNewArea={this.saveNewArea}\n            editArea={this.editArea}\n            deleteArea={this.deleteArea}\n          />\n          <Map location={this.state.location}/>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}